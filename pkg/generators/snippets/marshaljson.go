package snippets

import (
	"errors"
	"io"

	"k8s.io/gengo/generator"
	"k8s.io/gengo/types"
)

func GenerateMarshalJSON(ctx *generator.Context, t *types.Type, embeddedTypePackage string, w io.Writer) error {
	if ctx == nil || t == nil {
		return errors.New("nil pointer")
	}

	args := generator.Args{
		"type":  t,
		"alias": embeddedTypePackage,
	}

	sw := generator.NewSnippetWriter(w, ctx, "$", "$")

	sw.Do("// MarshalJSON is an autogenerated marshaling function, setting the TypeMeta.\n", nil)
	sw.Do("func (o $.type|raw$) MarshalJSON() ([]byte, error) {\n", args)
	sw.Do("o.$.type|raw$.TypeMeta = metav1.TypeMeta{Kind: \"$.type|raw$\", APIVersion: $.alias$.SchemeGroupVersion.String()}\n", args)
	sw.Do("return json.Marshal(o.$.type|raw$)\n", args)
	sw.Do("}\n\n", nil)

	return sw.Error()
}
