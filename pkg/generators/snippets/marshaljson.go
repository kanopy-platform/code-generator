package snippets

import (
	"errors"
	"io"

	"k8s.io/gengo/generator"
	"k8s.io/gengo/types"
)

func GenerateMarshalJSON(w io.Writer, ctx *generator.Context, t *types.Type, schemeGroupVersionPackageAlias string) error {
	if t == nil {
		return errors.New("nil pointer")
	}

	args := generator.Args{
		"type":  t,
		"alias": schemeGroupVersionPackageAlias,
	}

	raw := `// MarshalJSON is an autogenerated marshaling function, setting the TypeMeta.
func (o $.type|raw$) MarshalJSON() ([]byte, error) {
	o.$.type|raw$.TypeMeta = metav1.TypeMeta{Kind: "$.type|raw$", APIVersion: $.alias$.SchemeGroupVersion.String()}
	return json.Marshal(o.$.type|raw$)
}

`
	return writeSnippet(w, ctx, raw, args)
}
