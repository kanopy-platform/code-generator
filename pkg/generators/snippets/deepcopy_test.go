package snippets

import (
	"bytes"
	"testing"

	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"k8s.io/gengo/generator"
	"k8s.io/gengo/types"
)

func TestGenerateDeepCopy(t *testing.T) {
	t.Parallel()

	ctx, err := newTestGeneratorContext()
	require.NoError(t, err)

	tests := []struct {
		ctx  *generator.Context
		t    *types.Type
		want string
	}{
		{
			ctx: ctx,
			t:   newTestType(t, "SomeStruct"),
			want: `// DeepCopy is an autogenerated function
func (in *SomeStruct) DeepCopy() *SomeStruct {
	if in == nil {
		return nil
	}
	out := new(SomeStruct)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated function
func (in *SomeStruct) DeepCopyInto(out *SomeStruct) {
	in.SomeStruct.DeepCopyInto(&out.SomeStruct)
}

`,
		},
	}

	for _, test := range tests {
		var b bytes.Buffer
		sw := generator.NewSnippetWriter(&b, test.ctx, "$", "$")
		sw.Do(GenerateDeepCopy(test.t))
		assert.NoError(t, sw.Error())
		assert.Equal(t, test.want, b.String())
	}
}
