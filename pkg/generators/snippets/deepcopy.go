package snippets

import (
	"fmt"

	"k8s.io/gengo/generator"
	"k8s.io/gengo/types"
)

func GenerateDeepCopy(t *types.Type) (string, generator.Args) {
	args := generator.Args{
		"type": t,
	}

	raw := `// DeepCopy is an autogenerated function
func (in *$.type|raw$) DeepCopy() *$.type|raw$ {
	if in == nil {
		return nil
	}
	out := new($.type|raw$)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated function
func (in *$.type|raw$) DeepCopyInto(out *$.type|raw$) {
	in.$.type|raw$.DeepCopyInto(&out.$.type|raw$)`

	for _, m := range t.Members {
		if m.Type.Kind == "Struct" {
			if hasDeepCopyIntoMethod(m.Type) {
				raw = fmt.Sprintf("%s\n\tin.%s.DeepCopyInto(&out.%s)", raw, m.Name, m.Name)
			}
		}
	}

	raw = fmt.Sprintf("%s\n}\n\n", raw)

	return raw, args
}

func hasDeepCopyIntoMethod(t *types.Type) bool {
	for k := range t.Methods {
		if k == "DeepCopyInto" {
			return true
		}
	}

	return false
}
